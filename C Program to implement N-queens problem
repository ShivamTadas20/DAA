#include<stdio.h>
#include<stdlib.h>

int nQueen(int n);
int solution_count;

int isSafe(int board[], int row, int col, int n){
	for(int i=0; i<row; i++){
		if(board[i] == col || abs(board[i] - col) == abs(i-row)){
			return 0;
		}
	}
	return -1;
}

void solveQueenUtil(int board[], int row, int n){
	if(row == n){
		solution_count++;
		return;
	}
	for(int col =0; col<n; col++){
		if(isSafe(board, row, col, n)){
			board[row] = col;
			solveQueenUtil(board, row+1, n);
		}
	}
}

int nQueen(int n){
	solution_count = 0;

	int* board = (int*)malloc(n*sizeof(int));
	if(board == NULL) return 0;
	solveQueenUtil(board, 0, n);

	free(board);
	return solution_count;
}

int main(){
	int n;
	scanf("%d", &n);
	int result = nQueen(n);
	printf("%d\n", result);
	return 0;
}
