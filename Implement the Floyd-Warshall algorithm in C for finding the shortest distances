#include <stdio.h>
#define INF 99999
#define MAX_N 20 // Maximum value for N

//write your code here..
void floyd(int graph[MAX_N][MAX_N], int v){
	int dist[MAX_N][MAX_N];

	for (int i = 0 ; i < v ; i++){
		for(int j = 0; j<v ; j++){
			dist[i][j] = graph[i][j];
		}
	}

	for(int k = 0; k<v; k++){
		for(int i = 0; i<v; i++){
			for (int j = 0; j<v; j++){
				if(dist[i][k] != INF && dist[k][j] != INF &&
					dist[i][k] + dist[k][j] < dist[i][j]){
					dist[i][j] = dist[i][k] + dist[k][j];
					}
			}
		}
	}
	printf("The following matrix shows the shortest distances between all pairs of the vertices.\n");
	for(int i= 0; i<v; i++){
		for(int j = 0; j<v; j++){
			if(dist[i][j] == INF)
				printf(" %4s", "INF");
			else
				printf(" %4d", dist[i][j]);
		}
		printf("\n");
	}
}

int main(){
	int v, e;
	int graph[MAX_N][MAX_N];

	printf("Enter the number of vertices : ");
	scanf("%d", &v);

	for(int i = 0; i<v; i++){
		for(int j = 0; j<v; j++){
			if(i == j)
				graph[i][j] = 0;
			else
				graph[i][j] = INF;
		}
	}

	printf("Enter the number of edges : ");
	scanf("%d", &e);

	for(int i = 0; i<e; i++){
		int src, dest, weight;
		printf("Enter source : ");
		scanf("%d", &src);
		printf("Enter destination : ");
		scanf("%d", &dest);
		printf("Enter weight : ");
		scanf("%d", &weight);
		graph[src - 1][dest-1] = weight;
	}
	floyd(graph, v);

	return 0;
}
